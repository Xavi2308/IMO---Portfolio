// üöÄ CONFIGURACI√ìN ELECTRON ANTI-REFRESH
// Script para prevenir refreshes autom√°ticos en la versi√≥n de escritorio

// Configuraci√≥n global para React Query en entorno Electron
if (window.electronAPI) {
  console.log('üñ•Ô∏è Entorno Electron detectado - Aplicando configuraciones anti-refresh');
  
  // Desactivar todos los refetch autom√°ticos para Electron
  const electronQueryDefaults = {
    refetchOnWindowFocus: false,
    refetchOnMount: false,
    refetchOnReconnect: false,
    refetchInterval: false,
    staleTime: 30 * 60 * 1000, // 30 minutos m√≠nimo en Electron
    gcTime: 2 * 60 * 60 * 1000, // 2 horas en memoria
  };

  // Guardar configuraci√≥n global para hooks
  window.__ELECTRON_QUERY_CONFIG__ = electronQueryDefaults;
  
  // Prevenir recargas por visibilidad
  const originalVisibilityChange = document.addEventListener;
  document.addEventListener = function(type, listener, options) {
    if (type === 'visibilitychange') {
      // Interceptar y no hacer nada en Electron
      console.log('üö´ Visibilitychange interceptado en Electron');
      return;
    }
    return originalVisibilityChange.call(this, type, listener, options);
  };

  // Configurar pol√≠ticas de cache m√°s agresivas para Electron
  if ('serviceWorker' in navigator) {
    navigator.serviceWorker.register('/sw.js').then(registration => {
      console.log('üì± Service Worker registrado en Electron para cache optimizado');
    }).catch(error => {
      console.log('‚ö†Ô∏è Service Worker no disponible:', error);
    });
  }
}